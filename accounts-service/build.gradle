buildscript {
    ext {
        springBootVersion = '1.5.5.RELEASE'
    }

    repositories {
        mavenCentral()
    }

    dependencies {
        classpath "org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}"
    }
}

repositories {
    mavenLocal()
    mavenCentral()
}

apply plugin: 'maven'
apply plugin: 'java'
apply plugin: 'jacoco'
apply plugin: 'eclipse'
apply plugin: 'org.springframework.boot'
apply plugin: "io.spring.dependency-management"

// test { finalizedBy jacocoTestReport }

// jacocoTestReport {
//     group = "Reporting"
//     description = "Generate Jacoco coverage reports after running tests."
//     reports {

//         csv.enabled false

//         html {
//             enabled true
//             destination file("${buildDir}/reports/jacoco")
//         }

//         xml.enabled false
//     }

//     additionalSourceDirs = files(sourceSets.main.allJava.srcDirs)
// }


// jacoco {
//     toolVersion = "0.7.5+" //	reportsDir = file("$buildDir/customJacocoReportDir")
// }

sourceCompatibility = 1.8
targetCompatibility = 1.8


dependencyManagement {
    imports {
        mavenBom "org.springframework.cloud:spring-cloud-dependencies:Edgware.SR2"
        mavenBom "io.pivotal.spring.cloud:spring-cloud-services-dependencies:1.6.1.RELEASE"
    }
}

dependencies {

    compile group: 'com.example', name: 'rts_monitor', version: '1.0.0'

    // https://mvnrepository.com/artifact/org.springdoc/springdoc-openapi-ui
    compile group: 'org.springdoc', name: 'springdoc-openapi-ui', version: '1.3.0'

    // https://mvnrepository.com/artifact/org.springframework.security/spring-security-web
    // compile group: 'org.springframework.security', name: 'spring-security-web', version: '5.3.4.RELEASE'
    compile("org.springframework.boot:spring-boot-starter-security")

    // shared dependencies for all services
    compile "org.springframework.boot:spring-boot-starter-web"
    compile "org.springframework.boot:spring-boot-starter-actuator"
    compile "org.springframework.boot:spring-boot-starter-data-jpa"

    // compile "org.springframework.cloud:spring-cloud-starter-sleuth"
    // //compile "org.springframework.cloud:spring-cloud-starter-zipkin"
    // compile "org.springframework.cloud:spring-cloud-sleuth-zipkin-stream"
    // compile "org.springframework.cloud:spring-cloud-starter-stream-rabbit"

    // compile "org.springframework.cloud:spring-cloud-starter-config"
    // compile "org.springframework.cloud:spring-cloud-starter-netflix-eureka-client"
    compile "org.springframework.cloud:spring-cloud-starter-netflix-hystrix"

    // compile "io.pivotal.spring.cloud:spring-cloud-services-starter-config-client"
    // compile "io.pivotal.spring.cloud:spring-cloud-services-starter-service-registry"
    compile "io.pivotal.spring.cloud:spring-cloud-services-starter-circuit-breaker"

    //test packages
    testCompile "org.springframework.boot:spring-boot-starter-test"
    testCompile "junit:junit"
    testRuntime "com.jayway.jsonpath:json-path"
    // Runtime
    runtime "org.hsqldb:hsqldb"

}

jar {
    baseName = 'accounts'
    version = "" // omit the version from the war file name
}
description = "Micro-service to deal with accounts and user logins"

// task wrapper(type: Wrapper) { gradleVersion = '4.6' }

task generatePom {
    doLast {
        pom {
            project {
                groupId project.group.toString()
                artifactId artifactId
                version version

                inceptionYear '2018'
                licenses {
                    license {
                        name 'MIT License'
                        url 'MIT'
                        distribution 'repo'
                    }
                }
            }
        }.writeTo("$buildDir/pom.xml")
    }
}
